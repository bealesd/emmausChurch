@model RoleInfo
@using Microsoft.AspNetCore.Identity;

@{
    var roles = (List<IdentityRole>)ViewData["roles"];
}

<div class="mainWrapper">

    <div class="title">
        User Management
    </div>

    <!--#region table  -->
    <div class="table">

        <div class="fieldOne table-header">
            <p>Name</p>
        </div>

        <div class="fieldTwo table-header">
            <p>Remove</p>
        </div>

        <div class="fieldThree table-header">
            <p></p>
        </div>


        @foreach (var role in roles)
        {
            <div class="fieldOne">
                <p>@role.Name</p>
            </div>

            <div class="fieldTwo">
                <p>
                    <a onclick="ConfirmDelete('Delete Role?')"
                       asp-action="DeleteRole" asp-route-role="@role.Name">Delete</a>
                </p>
            </div>

            <div class="fieldThree">
                <p></p>
            </div>
        }

        <form asp-action="CreateRole" method="post">
            Role<input asp-for="Rolename" value="rolename" /><br />
            <button type="submit">Add</button>
        </form>

        @*<form asp-action="CreateUser" method="post">

            <div class="fieldOne">
                <p>
                    <input class="input" type="text" placeholder="email" name="EmailAddress" />
                </p>
            </div>
            <div class="fieldTwo">
                <p>
                    <input class="input" type="password" placeholder="password" name="Password" />
                </p>
            </div>
            <div class="fieldThree">
                <p>
                    <button type="submit">Create</button>
                </p>
            </div>

        </form>*@
        <!--#endregion -->

    </div>
</div>

<script>
    function ConfirmDelete(message) {
        if (confirm(message)) {
            return;
        }
        event.preventDefault();
    }
</script>