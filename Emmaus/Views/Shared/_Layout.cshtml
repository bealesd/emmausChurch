<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Emmaus</title>
    <link rel="stylesheet" type="text/css" href="~/css/style.css" />
    <!-- Google -->
    <meta itemprop="name" content="Emmaus Church Center" />
    <meta itemprop="description" content="Emmaus Church of Severn Beach welcomes everyone from the community to join us." />
    <meta itemprop="image" content="/images/emmausbuilding.jpg" />

</head>


<body background="/images/bluesky50.jpg">

    @functions {
    public string DisplaySubMenu()
    {
        string pageName = ViewBag.Title.ToLower();

        if (pageName.Contains("wider community"))
        {
            var homeLink = "<a class='subLink' href='/Ui/LoadAtHomeView'><p>At Home</p></a>";
            var overseasLink = "<a class='subLink' href='/Ui/LoadOverseasView'><p>Overseas</p></a>";
            return String.Concat(homeLink, overseasLink);
        }
        else if (pageName.Contains("services"))
        {
            var adultLink = "<a class='subLink' href='/Ui/LoadAdultServicesView'><p>Adult</p></a>";
            var childLink = "<a class='subLink' href='/Ui/LoadChildServicesView'><p>Children</p></a>";
            return String.Concat(adultLink, childLink);
        }

        else if (pageName.Contains("about") || pageName.Contains("history") || pageName.Contains("meet the team"))
        {
            var historyLink = "<a class='subLink' href='/Ui/LoadHistoryView'><p>Our&nbsp;History</p></a>";
            var teamLink = "<a class='subLink' href='/Ui/LoadMeetTheTeamView'><p>Our&nbsp;Team</p></a>";
            return String.Concat(teamLink, historyLink);
        }
        return "";
    }
    }

    <div class="wrapper">

        <div class="navBarContainer">
            <p class="mainTitle">Emmaus Church Centre</p>
            <a class="navLink" asp-controller="Ui" asp-action="LoadWelcomeView"><p>Welcome</p></a>
            <a class="navLink" asp-controller="Ui" asp-action="LoadAboutView"><p>About</p></a>
            <a class="navLink" asp-controller="Ui" asp-action="LoadServicesView"><p>Services</p></a>
            <a class="navLink" asp-controller="Ui" asp-action="LoadLocalCommunityView"><p>Local&nbsp;Community</p></a>
            <a class="navLink" asp-controller="Ui" asp-action="LoadWiderCommunityView"><p>Wider&nbsp;Community</p></a>
            <a class="navLink" asp-controller="Ui" asp-action="LoadLinksView"><p>Links</p></a>
            <a class="navLink" asp-controller="Ui" asp-action="LoadContactUsView"><p>Contacts</p></a>
        </div>


        <div class="subMenu">
            @Html.Raw(DisplaySubMenu())
        </div>

        @RenderBody()

        <div class="footer">
            <p>Copyright &copy; Emmaus Church</p>
        </div>

    </div>

    <script>
        let model = @Html.Raw(Json.Serialize(ViewBag.Title));

        window.onload = scrollIfRequired();

        function scrollIfRequired() {
             if (model === 'At Home Wider Community') {
                 scrollToDiv("atHome");
             }
             else if (model === 'Overseas Wider Community') {
                 scrollToDiv("overseas");
             }
        }

        function scrollToDiv(divName) {
            let elmnt = document.getElementById(divName);
            elmnt.scrollIntoView();
        }

        class MainTitle {
            constructor() {
                this.titleText = document.getElementsByClassName('mainTitle')[0].innerHTML;
                this.blinkerState = 0;
                this.index = 1;
                this.id;
            }

            UpdateTitle(text) {
                let title = document.getElementsByClassName('mainTitle')[0];
                title.innerHTML = text;
            }

            SetTitle(word) {
                word = word.substring(0, this.index);
                switch (this.blinkerState) {
                    case 0: this.blinkerState = 1; break
                    case 1: word += "|"; this.blinkerState = 0; break
                    default: break
                }
                this.UpdateTitle(word);
                this.Continue();
            }

            Continue() {
                if (this.blinkerState === 1) {
                    this.index++;
                }
                if (this.index <= this.titleText.length) {
                    this.StartBlinker(this.titleText);
                }
            }
            
            StartBlinker(word) {
                var self = this;
                setTimeout(function () {
                    self.SetTitle(word);
                }, 100)
            }
        }

        var mainTitle = new MainTitle();
        mainTitle.StartBlinker(mainTitle.titleText);

        //let titleText;
        //let currentTitleText = '';
        //let titleObj; ;
        //let currentPosition;
        //let endPosition;
        //let dashOn;
        //let titleIntervalId;

        //function init() {
        //    titleObj = document.getElementsByClassName('mainTitle')[0];
        //    titleText = titleObj.innerHTML;
        //    currentPosition = 0;
        //    endPosition = titleText.length;
        //    titleObj.innerHTML = '';
        //    dashOn = 'false';
        //}

        //function flickerDash() {
        //    if (dashOn === 'false') {
        //        dashOn = 'true';
        //        titleObj.innerHTML += '|';
        //        currentPosition++;
        //    }
        //    else if (currentPosition > 0) {
        //        let titleHtml = titleObj.innerHTML;
        //        let newTitleHtml = titleHtml.substring(0, titleHtml.length - 2);
        //        if (newTitleHtml !== undefined) {
        //            titleObj.innerHTML = newTitleHtml;
        //        }
        //        dashOn = 'false'
        //    }
        //}

        //function update() {
        //    if (currentPosition === endPosition) {
        //        let titleHtml = titleObj.innerHTML;
        //        titleObj.innerHTML = titleHtml.substring(0, titleHtml.length - 1);
        //        stop();
        //        return;
        //    }
        //    titleObj.innerHTML += titleText[currentPosition];
        //    flickerDash();
        //}

        //function start() {
        //    init();
        //    titleIntervalId = setInterval(function () { update(); }, 100);
        //}

        //function stop() {
        //    clearInterval(titleIntervalId);
        //}
    </script>

</body>

</html>